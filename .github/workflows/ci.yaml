name: CI
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
      - develop
  pull_request:
    branches:
      - master
      - main
      - develop

permissions:
  contents: read

jobs:
  golangci:
    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: read # for golangci/golangci-lint-action to fetch pull requests
    name: Linter
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          golangci_lint_version: v1.64.6

  build:
    timeout-minutes: 30
    name: build
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        go: ['~1.23.0', '~1.24.0']
        fix-version:
          - ''
          - fix42
          - fix44
    steps:
      - name: Check out source
        uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Install ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'

      - name: mod download
        run: go mod download

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@v1
        with:
          mongodb-replica-set: replicaset

      - name: Test
        env:
          GO111MODULE: on
          MONGODB_TEST_CXN: mongodb://localhost:27017
          FIX_TEST: ${{ matrix.fix-version }}
        run: if [ -z $FIX_TEST ]; then make build-src && make test-ci; else make generate-ci && make build && make $FIX_TEST; fi
